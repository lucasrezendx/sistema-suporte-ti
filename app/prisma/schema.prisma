generator client {
    provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
    output = "/home/ubuntu/sistema-suporte-ti/node_modules/.prisma/client"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Task {
  id          String   @id @default(cuid())
  description String
  requester   String
  urgency     UrgencyLevel
  category    TaskCategory
  status      TaskStatus @default(PENDING)
  createdAt   DateTime @default(now())
  resolvedAt  DateTime?
  updatedAt   DateTime @updatedAt

  @@map("tasks")
}

model InventoryItem {
  id          String   @id @default(cuid())
  name        String
  category    InventoryCategory
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  transactions InventoryTransaction[]

  @@map("inventory_items")
}

model InventoryTransaction {
  id          String   @id @default(cuid())
  itemId      String
  type        TransactionType
  quantity    Int
  recipient   String?
  notes       String?
  createdAt   DateTime @default(now())
  item        InventoryItem @relation(fields: [itemId], references: [id])

  @@map("inventory_transactions")
}

enum UrgencyLevel {
  URGENT
  IMPORTANT
  NOT_URGENT
  NOT_IMPORTANT
}

enum TaskCategory {
  EXPANSION
  SUPPORT
  MONITORING
  CENTRAL_PROJECTS
}

enum TaskStatus {
  PENDING
  RESOLVED
}

enum InventoryCategory {
  KEYBOARD
  MOUSE
  MONITOR
  HEADSET
  WEBCAM
  OTHER
}

enum TransactionType {
  IN
  OUT
}